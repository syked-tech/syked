{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport * as therapistSlice from 'containers/Therapist/therapistSlice';\nimport * as API from 'common/api';\nexport function* getTherapists() {\n  try {\n    var _response$data, _response$data$data;\n\n    const response = yield call(axios, API.THERAPIST_LIST_API);\n    yield put(therapistSlice.getTherapistsSuccess((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.result) || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistsInFailed(error));\n  }\n}\nexport function* getTherapist(actions) {\n  const {\n    id\n  } = actions.payload;\n\n  try {\n    var _response$data2, _response$data2$data;\n\n    const response = yield call(axios, `${API.THERAPIST_DETAILS_API}/${id}`);\n    yield put(therapistSlice.getTherapistSuccess((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : _response$data2$data.result) || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistInFailed(error));\n  }\n}\nexport function* getTherapistsByScore(actions) {\n  const {\n    score\n  } = actions.payload;\n\n  try {\n    var _response$data3, _response$data3$data;\n\n    const response = yield call(axios, `${API.THERAPIST_SCORE_API}${score}`);\n    yield put(therapistSlice.getTherapistsByScore((response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$data = _response$data3.data) === null || _response$data3$data === void 0 ? void 0 : _response$data3$data.result) || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistsByScoreInFailed(error));\n  }\n}\nexport function* getReviews() {\n  try {\n    var _response$data4, _response$data4$data;\n\n    const response = yield call(axios, API.REVIEWS_API);\n    yield put(therapistSlice.getReviewsSuccess((response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$data = _response$data4.data) === null || _response$data4$data === void 0 ? void 0 : _response$data4$data.result) || []));\n  } catch (error) {\n    yield put(therapistSlice.getReviewsInFailed(error));\n  }\n}\nexport function* getQuestions() {\n  try {\n    var _response$data5, _response$data5$data;\n\n    const response = yield call(axios, API.QUESTIONS_API);\n    yield put(therapistSlice.getQuestionsSuccess((response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$data = _response$data5.data) === null || _response$data5$data === void 0 ? void 0 : _response$data5$data.result) || []));\n  } catch (error) {\n    yield put(therapistSlice.getQuestionsInFailed(error));\n  }\n}\nexport default function* therapistSaga() {\n  yield takeLatest(therapistSlice.getTherapists.type, getTherapists);\n  yield takeLatest(therapistSlice.getTherapist.type, getTherapist);\n  yield takeLatest(therapistSlice.getReviews.type, getReviews);\n  yield takeLatest(therapistSlice.getQuestions.type, getQuestions);\n  yield takeLatest(therapistSlice.getTherapistsByScore.type, getTherapistsByScore);\n}","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Therapist/saga.js"],"names":["call","put","takeLatest","axios","therapistSlice","API","getTherapists","response","THERAPIST_LIST_API","getTherapistsSuccess","data","result","error","getTherapistsInFailed","getTherapist","actions","id","payload","THERAPIST_DETAILS_API","getTherapistSuccess","getTherapistInFailed","getTherapistsByScore","score","THERAPIST_SCORE_API","getTherapistsByScoreInFailed","getReviews","REVIEWS_API","getReviewsSuccess","getReviewsInFailed","getQuestions","QUESTIONS_API","getQuestionsSuccess","getQuestionsInFailed","therapistSaga","type"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,cAAZ,MAAgC,qCAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AAEA,OAAO,UAAUC,aAAV,GAA0B;AAC/B,MAAI;AAAA;;AACF,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAD,EAAQE,GAAG,CAACG,kBAAZ,CAA3B;AACA,UAAMP,GAAG,CAACG,cAAc,CAACK,oBAAf,CAAoC,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,8BAAAA,QAAQ,CAAEG,IAAV,yFAAgBA,IAAhB,4EAAsBC,MAAtB,KAAgC,EAApE,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,cAAc,CAACS,qBAAf,CAAqCD,KAArC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUE,YAAV,CAAuBC,OAAvB,EAAgC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,OAAvB;;AACA,MAAI;AAAA;;AACF,UAAMV,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAD,EAAS,GAAEE,GAAG,CAACa,qBAAsB,IAAGF,EAAG,EAA3C,CAA3B;AACA,UAAMf,GAAG,CAACG,cAAc,CAACe,mBAAf,CAAmC,CAAAZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEG,IAAV,4FAAgBA,IAAhB,8EAAsBC,MAAtB,KAAgC,EAAnE,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,cAAc,CAACgB,oBAAf,CAAoCR,KAApC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUS,oBAAV,CAA+BN,OAA/B,EAAwC;AAC7C,QAAM;AAAEO,IAAAA;AAAF,MAAYP,OAAO,CAACE,OAA1B;;AACA,MAAI;AAAA;;AACF,UAAMV,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAD,EAAS,GAAEE,GAAG,CAACkB,mBAAoB,GAAED,KAAM,EAA3C,CAA3B;AACA,UAAMrB,GAAG,CAACG,cAAc,CAACiB,oBAAf,CAAoC,CAAAd,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEG,IAAV,4FAAgBA,IAAhB,8EAAsBC,MAAtB,KAAgC,EAApE,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,cAAc,CAACoB,4BAAf,CAA4CZ,KAA5C,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUa,UAAV,GAAuB;AAC5B,MAAI;AAAA;;AACF,UAAMlB,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAD,EAAQE,GAAG,CAACqB,WAAZ,CAA3B;AACA,UAAMzB,GAAG,CAACG,cAAc,CAACuB,iBAAf,CAAiC,CAAApB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEG,IAAV,4FAAgBA,IAAhB,8EAAsBC,MAAtB,KAAgC,EAAjE,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,cAAc,CAACwB,kBAAf,CAAkChB,KAAlC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUiB,YAAV,GAAyB;AAC9B,MAAI;AAAA;;AACF,UAAMtB,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAD,EAAQE,GAAG,CAACyB,aAAZ,CAA3B;AACA,UAAM7B,GAAG,CAACG,cAAc,CAAC2B,mBAAf,CAAmC,CAAAxB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEG,IAAV,4FAAgBA,IAAhB,8EAAsBC,MAAtB,KAAgC,EAAnE,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,cAAc,CAAC4B,oBAAf,CAAoCpB,KAApC,CAAD,CAAT;AACD;AACF;AAED,eAAe,UAAUqB,aAAV,GAA0B;AACvC,QAAM/B,UAAU,CAACE,cAAc,CAACE,aAAf,CAA6B4B,IAA9B,EAAoC5B,aAApC,CAAhB;AACA,QAAMJ,UAAU,CAACE,cAAc,CAACU,YAAf,CAA4BoB,IAA7B,EAAmCpB,YAAnC,CAAhB;AACA,QAAMZ,UAAU,CAACE,cAAc,CAACqB,UAAf,CAA0BS,IAA3B,EAAiCT,UAAjC,CAAhB;AACA,QAAMvB,UAAU,CAACE,cAAc,CAACyB,YAAf,CAA4BK,IAA7B,EAAmCL,YAAnC,CAAhB;AACA,QAAM3B,UAAU,CAACE,cAAc,CAACiB,oBAAf,CAAoCa,IAArC,EAA2Cb,oBAA3C,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport * as therapistSlice from 'containers/Therapist/therapistSlice';\nimport * as API from 'common/api';\n\nexport function* getTherapists() {\n  try {\n    const response = yield call(axios, API.THERAPIST_LIST_API);\n    yield put(therapistSlice.getTherapistsSuccess(response?.data?.data?.result || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistsInFailed(error));\n  }\n}\n\nexport function* getTherapist(actions) {\n  const { id } = actions.payload;\n  try {\n    const response = yield call(axios, `${API.THERAPIST_DETAILS_API}/${id}`);\n    yield put(therapistSlice.getTherapistSuccess(response?.data?.data?.result || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistInFailed(error));\n  }\n}\n\nexport function* getTherapistsByScore(actions) {\n  const { score } = actions.payload;\n  try {\n    const response = yield call(axios, `${API.THERAPIST_SCORE_API}${score}`);\n    yield put(therapistSlice.getTherapistsByScore(response?.data?.data?.result || []));\n  } catch (error) {\n    yield put(therapistSlice.getTherapistsByScoreInFailed(error));\n  }\n}\n\nexport function* getReviews() {\n  try {\n    const response = yield call(axios, API.REVIEWS_API);\n    yield put(therapistSlice.getReviewsSuccess(response?.data?.data?.result || []));\n  } catch (error) {\n    yield put(therapistSlice.getReviewsInFailed(error));\n  }\n}\n\nexport function* getQuestions() {\n  try {\n    const response = yield call(axios, API.QUESTIONS_API);\n    yield put(therapistSlice.getQuestionsSuccess(response?.data?.data?.result || []));\n  } catch (error) {\n    yield put(therapistSlice.getQuestionsInFailed(error));\n  }\n}\n\nexport default function* therapistSaga() {\n  yield takeLatest(therapistSlice.getTherapists.type, getTherapists);\n  yield takeLatest(therapistSlice.getTherapist.type, getTherapist);\n  yield takeLatest(therapistSlice.getReviews.type, getReviews);\n  yield takeLatest(therapistSlice.getQuestions.type, getQuestions);\n  yield takeLatest(therapistSlice.getTherapistsByScore.type, getTherapistsByScore);\n}\n"]},"metadata":{},"sourceType":"module"}