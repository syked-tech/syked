{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nexport const therapistSlice = createSlice({\n  name: 'therapist',\n  initialState: {\n    therapists: [],\n    isLoadingTherapists: false,\n    therapist: {},\n    isLoadingTherapist: false,\n    reviews: [],\n    isLoadingReviews: false,\n    questions: [],\n    isLoadingQuestions: false\n  },\n  reducers: {\n    getTherapists: state => {\n      state.isLoadingTherapists = true;\n    },\n    getTherapistsSuccess: (state, action) => {\n      state.isLoadingTherapists = false;\n      state.therapists = action.payload;\n    },\n    getTherapistsInFailed: state => {\n      state.isLoadingTherapists = false;\n    },\n    getTherapist: state => {\n      state.isLoadingTherapist = true;\n    },\n    getTherapistSuccess: (state, action) => {\n      state.isLoadingTherapist = false;\n      state.therapist = action.payload;\n    },\n    getTherapistInFailed: state => {\n      state.isLoadingTherapist = false;\n    },\n    getReviews: state => {\n      state.isLoadingReviews = true;\n    },\n    getReviewsSuccess: (state, action) => {\n      state.isLoadingReviews = false;\n      state.reviews = action.payload;\n    },\n    getReviewsInFailed: state => {\n      state.isLoadingReviews = false;\n    },\n    getQuestions: state => {\n      state.isLoadingQuestions = true;\n    },\n    getQuestionsSuccess: (state, action) => {\n      state.isLoadingQuestions = false;\n      state.questions = action.payload;\n    },\n    getQuestionsInFailed: state => {\n      state.isLoadingQuestions = false;\n    }\n  }\n});\nexport const {\n  getTherapists,\n  getTherapistsSuccess,\n  getTherapistsInFailed,\n  getTherapist,\n  getTherapistSuccess,\n  getTherapistInFailed,\n  getReviews,\n  getReviewsSuccess,\n  getReviewsInFailed,\n  getQuestions,\n  getQuestionsSuccess,\n  getQuestionsInFailed\n} = therapistSlice.actions;\nexport const selectTherapists = state => state.therapist.therapists;\nexport const isLoadingTherapists = state => state.therapist.isLoadingTherapists;\nexport const selectTherapist = state => state.therapist.therapist;\nexport const isLoadingTherapist = state => state.therapist.isLoadingTherapist;\nexport const selectReviews = state => state.therapist.reviews;\nexport const isLoadingReviews = state => state.therapist.isLoadingReviews;\nexport const selectQuestions = state => state.therapist.questions;\nexport const isLoadingQuestions = state => state.therapist.isLoadingQuestions;\nexport default therapistSlice.reducer;","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Therapist/therapistSlice.js"],"names":["createSlice","therapistSlice","name","initialState","therapists","isLoadingTherapists","therapist","isLoadingTherapist","reviews","isLoadingReviews","questions","isLoadingQuestions","reducers","getTherapists","state","getTherapistsSuccess","action","payload","getTherapistsInFailed","getTherapist","getTherapistSuccess","getTherapistInFailed","getReviews","getReviewsSuccess","getReviewsInFailed","getQuestions","getQuestionsSuccess","getQuestionsInFailed","actions","selectTherapists","selectTherapist","selectReviews","selectQuestions","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const therapistSlice = createSlice({\n  name: 'therapist',\n  initialState: {\n    therapists: [],\n    isLoadingTherapists: false,\n    therapist: {},\n    isLoadingTherapist: false,\n    reviews: [],\n    isLoadingReviews: false,\n    questions: [],\n    isLoadingQuestions: false,\n  },\n  reducers: {\n    getTherapists: (state) => {\n      state.isLoadingTherapists = true;\n    },\n    getTherapistsSuccess: (state, action) => {\n      state.isLoadingTherapists = false;\n      state.therapists = action.payload;\n    },\n    getTherapistsInFailed: (state) => {\n      state.isLoadingTherapists = false;\n    },\n    getTherapist: (state) => {\n      state.isLoadingTherapist = true;\n    },\n    getTherapistSuccess: (state, action) => {\n      state.isLoadingTherapist = false;\n      state.therapist = action.payload;\n    },\n    getTherapistInFailed: (state) => {\n      state.isLoadingTherapist = false;\n    },\n    getReviews: (state) => {\n      state.isLoadingReviews = true;\n    },\n    getReviewsSuccess: (state, action) => {\n      state.isLoadingReviews = false;\n      state.reviews = action.payload;\n    },\n    getReviewsInFailed: (state) => {\n      state.isLoadingReviews = false;\n    },\n    getQuestions: (state) => {\n      state.isLoadingQuestions = true;\n    },\n    getQuestionsSuccess: (state, action) => {\n      state.isLoadingQuestions = false;\n      state.questions = action.payload;\n    },\n    getQuestionsInFailed: (state) => {\n      state.isLoadingQuestions = false;\n    },\n  },\n});\n\nexport const {\n  getTherapists,\n  getTherapistsSuccess,\n  getTherapistsInFailed,\n  getTherapist,\n  getTherapistSuccess,\n  getTherapistInFailed,\n  getReviews,\n  getReviewsSuccess,\n  getReviewsInFailed,\n  getQuestions,\n  getQuestionsSuccess,\n  getQuestionsInFailed,\n} = therapistSlice.actions;\n\nexport const selectTherapists = (state) => state.therapist.therapists;\nexport const isLoadingTherapists = (state) => state.therapist.isLoadingTherapists;\nexport const selectTherapist = (state) => state.therapist.therapist;\nexport const isLoadingTherapist = (state) => state.therapist.isLoadingTherapist;\nexport const selectReviews = (state) => state.therapist.reviews;\nexport const isLoadingReviews = (state) => state.therapist.isLoadingReviews;\nexport const selectQuestions = (state) => state.therapist.questions;\nexport const isLoadingQuestions = (state) => state.therapist.isLoadingQuestions;\n\nexport default therapistSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}