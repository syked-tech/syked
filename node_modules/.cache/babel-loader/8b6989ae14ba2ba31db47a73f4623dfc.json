{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/components/UnauthenticatedRoute/UnauthenticatedRoute.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`, 'i');\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n\n  if (!results[2]) {\n    return '';\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport default function UnauthenticatedRoute({\n  component: C,\n  appProps,\n  ...rest\n}) {\n  const redirect = querystring('redirect');\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!appProps.isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(C, { ...props,\n          ...appProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: redirect === '' || redirect === null ? '/' : redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = UnauthenticatedRoute;\nUnauthenticatedRoute.propTypes = {\n  appProps: PropTypes.any,\n  component: PropTypes.any\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UnauthenticatedRoute\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/components/UnauthenticatedRoute/UnauthenticatedRoute.js"],"names":["React","PropTypes","Route","Redirect","querystring","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","UnauthenticatedRoute","component","C","appProps","rest","redirect","props","isAuthenticated","propTypes","any"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAjD,EAAuD;AACrDJ,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AAEA,QAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,OAAMP,IAAK,mBAAvB,EAA2C,GAA3C,CAAd;AACA,QAAMQ,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWR,GAAX,CAAhB;;AAEA,MAAI,CAACO,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,MAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB;AACf,WAAO,EAAP;AACD;;AAED,SAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACD;;AAED,eAAe,SAASM,oBAAT,CAA8B;AAAEC,EAAAA,SAAS,EAAEC,CAAb;AAAgBC,EAAAA,QAAhB;AAA0B,KAAGC;AAA7B,CAA9B,EAAmE;AAChF,QAAMC,QAAQ,GAAGjB,WAAW,CAAC,UAAD,CAA5B;AACA,sBACE,QAAC,KAAD,OACMgB,IADN;AAEE,IAAA,MAAM,EAAGE,KAAD,IAAW;AACjB,UAAI,CAACH,QAAQ,CAACI,eAAd,EAA+B;AAC7B,4BAAO,QAAC,CAAD,OAAOD,KAAP;AAAA,aAAkBH;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEE,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,KAAK,IAAhC,GAAuC,GAAvC,GAA6CA;AAA3D;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAbuBL,oB;AAexBA,oBAAoB,CAACQ,SAArB,GAAiC;AAC/BL,EAAAA,QAAQ,EAAElB,SAAS,CAACwB,GADW;AAE/BR,EAAAA,SAAS,EAAEhB,SAAS,CAACwB;AAFU,CAAjC","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, '\\\\$&');\n\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`, 'i');\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return '';\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport default function UnauthenticatedRoute({ component: C, appProps, ...rest }) {\n  const redirect = querystring('redirect');\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!appProps.isAuthenticated) {\n          return <C {...props} {...appProps} />;\n        }\n        return <Redirect to={redirect === '' || redirect === null ? '/' : redirect} />;\n      }}\n    />\n  );\n}\n\nUnauthenticatedRoute.propTypes = {\n  appProps: PropTypes.any,\n  component: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}