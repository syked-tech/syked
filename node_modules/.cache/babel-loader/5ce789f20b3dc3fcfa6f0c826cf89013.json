{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Cookies } from 'react-cookie';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { selectIsAuthenticated // selectUser,\n, userHasAuthenticated as userHasAuthenticatedAction // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\nimport * as CONSTANTS from 'common/constants';\nimport Routes from './Routes';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  userHasAuthenticated\n}) {\n  _s();\n\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const cookies = new Cookies();\n  useEffect(() => {\n    onLoad();\n  }, [onLoad, isAuthenticated]);\n  const onLoad = useCallback(async () => {\n    try {\n      const currentSession = cookies.get(CONSTANTS.JWT_NAME);\n      console.log(currentSession); // const currentSession = await Auth.currentSession();\n      // setUserSession(currentSession);\n\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {// console.log(e);\n      }\n    }\n\n    setIsAuthenticating(false); // eslint-disable-next-line no-undef\n  }, [setUserSession, userHasAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      appProps: {\n        isAuthenticated,\n        userHasAuthenticated\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notifier, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"j3z8mywHxkgGU4OXAd4BnHgwP8w=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  userHasAuthenticated: values => dispatch(userHasAuthenticatedAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withRouter, withConnect)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/App.js"],"names":["React","useState","useEffect","useCallback","PropTypes","Cookies","compose","connect","useSelector","withRouter","selectIsAuthenticated","userHasAuthenticated","userHasAuthenticatedAction","Notifier","CONSTANTS","Routes","App","isAuthenticated","isAuthenticating","setIsAuthenticating","cookies","onLoad","currentSession","get","JWT_NAME","console","log","e","setUserSession","propTypes","func","mapDispatchToProps","dispatch","values","withConnect"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACEC,qBADF,CAEE;AAFF,EAGEC,oBAAoB,IAAIC,0BAH1B,CAIE;AAJF,OAKO,2BALP;AAMA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,YAAP;;;;AACA,SAASC,GAAT,CAAa;AAAEL,EAAAA;AAAF,CAAb,EAAuC;AAAA;;AACrC,QAAMM,eAAe,GAAGT,WAAW,CAACE,qBAAD,CAAnC;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAMmB,OAAO,GAAG,IAAIf,OAAJ,EAAhB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,MAAM;AACP,GAFQ,EAEN,CAACA,MAAD,EAASJ,eAAT,CAFM,CAAT;AAIA,QAAMI,MAAM,GAAGlB,WAAW,CAAC,YAAY;AACrC,QAAI;AACF,YAAMmB,cAAc,GAAGF,OAAO,CAACG,GAAR,CAAYT,SAAS,CAACU,QAAtB,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ,EAFE,CAGF;AACA;;AACAX,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAND,CAME,OAAOgB,CAAP,EAAU;AACV,UAAIA,CAAC,KAAK,iBAAV,EAA6B,CAC3B;AACD;AACF;;AACDR,IAAAA,mBAAmB,CAAC,KAAD,CAAnB,CAZqC,CAarC;AACD,GAdyB,EAcvB,CAACS,cAAD,EAAiBjB,oBAAjB,CAduB,CAA1B;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE;AAAEM,QAAAA,eAAF;AAAmBN,QAAAA;AAAnB;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GA/BQK,G;UACiBR,W;;;KADjBQ,G;AAiCTA,GAAG,CAACa,SAAJ,GAAgB;AACdlB,EAAAA,oBAAoB,EAAEP,SAAS,CAAC0B;AADlB,CAAhB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,oBAAoB,EAAGsB,MAAD,IAAYD,QAAQ,CAACpB,0BAA0B,CAACqB,MAAD,CAA3B;AADF,CAAf,CAA3B;;AAIA,MAAMC,WAAW,GAAG3B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAA3B;AAEA,eAAezB,OAAO,CAACG,UAAD,EAAayB,WAAb,CAAP,CAAiClB,GAAjC,CAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Cookies } from 'react-cookie';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  selectIsAuthenticated,\n  // selectUser,\n  userHasAuthenticated as userHasAuthenticatedAction,\n  // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\nimport * as CONSTANTS from 'common/constants';\n\nimport Routes from './Routes';\nimport './App.scss';\nfunction App({ userHasAuthenticated }) {\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad, isAuthenticated]);\n\n  const onLoad = useCallback(async () => {\n    try {\n      const currentSession = cookies.get(CONSTANTS.JWT_NAME);\n      console.log(currentSession);\n      // const currentSession = await Auth.currentSession();\n      // setUserSession(currentSession);\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        // console.log(e);\n      }\n    }\n    setIsAuthenticating(false);\n    // eslint-disable-next-line no-undef\n  }, [setUserSession, userHasAuthenticated]);\n\n  return (\n    <>\n      <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n      <Notifier />\n    </>\n  );\n}\n\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  userHasAuthenticated: (values) => dispatch(userHasAuthenticatedAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withRouter, withConnect)(App);\n"]},"metadata":{},"sourceType":"module"}