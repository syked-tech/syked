{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ForgotPassword/ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\n// import SocialButton from 'components/SocialButton';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport * as CONSTANTS from 'common/constants';\nimport FormStateToRedux from 'common/util/FormStateToRedux';\nimport { composeValidators, required, mustBeEmail } from 'common/util/Validation';\nimport { forgotPassword as forgotPasswordAction, isLoadingForgotPassword, selectError } from 'containers/Auth/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword({\n  forgotPassword\n}) {\n  _s();\n\n  const loading = useSelector(isLoadingForgotPassword);\n  const asyncError = useSelector(selectError);\n\n  const onSubmit = values => {\n    forgotPassword(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/img/loader.svg\",\n        alt: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container pt-5 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: onSubmit,\n                subscription: {\n                  submitting: true,\n                  pristine: true\n                },\n                children: ({\n                  handleSubmit,\n                  submitting,\n                  pristine\n                }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(FormStateToRedux, {\n                    form: \"FORGOT_PASSOWORD_FORM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-4\",\n                    children: \"Forgot Password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 23\n                  }, this), asyncError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: asyncError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 25\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Registered Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      id: \"email\",\n                      type: \"email\",\n                      component: \"input\",\n                      className: \"form-control\",\n                      required: true,\n                      validate: composeValidators(required, mustBeEmail),\n                      placeholder: \"Email\",\n                      name: \"email\",\n                      pattern: \"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-z]{2,8}$\",\n                      children: ({\n                        input,\n                        meta: {\n                          error,\n                          touched\n                        },\n                        ...rest\n                      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                          ...rest\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 68,\n                          columnNumber: 31\n                        }, this), error && touched && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-danger\",\n                          children: `${rest.placeholder} is ${error}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 70,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group mb-0 mt-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-theme\",\n                      disabled: submitting || pristine,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: CONSTANTS.LOGIN_PAGE,\n                      children: \"Back To Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/img/sing_up.png\",\n          alt: \"forgot password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForgotPassword, \"HNNgmm4q/GNw+q5xb6EbpgZvST4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ForgotPassword;\nForgotPassword.propTypes = {\n  forgotPassword: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  forgotPassword: values => dispatch(forgotPasswordAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ForgotPassword/ForgotPassword.js"],"names":["React","PropTypes","connect","useSelector","compose","Link","Form","Field","Header","Footer","CONSTANTS","FormStateToRedux","composeValidators","required","mustBeEmail","forgotPassword","forgotPasswordAction","isLoadingForgotPassword","selectError","ForgotPassword","loading","asyncError","onSubmit","values","submitting","pristine","handleSubmit","input","meta","error","touched","rest","placeholder","LOGIN_PAGE","propTypes","func","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\n// import SocialButton from 'components/SocialButton';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport * as CONSTANTS from 'common/constants';\nimport FormStateToRedux from 'common/util/FormStateToRedux';\nimport { composeValidators, required, mustBeEmail } from 'common/util/Validation';\nimport {\n  forgotPassword as forgotPasswordAction,\n  isLoadingForgotPassword,\n  selectError,\n} from 'containers/Auth/authSlice';\n\nfunction ForgotPassword({ forgotPassword }) {\n  const loading = useSelector(isLoadingForgotPassword);\n  const asyncError = useSelector(selectError);\n  const onSubmit = (values) => {\n    forgotPassword(values);\n  };\n\n  return (\n    <>\n      <Header />\n\n      {loading ? (\n        <div className=\"loader\">\n          <img src=\"assets/img/loader.svg\" alt=\"loader\" />\n        </div>\n      ) : null}\n\n      <section className=\"login pt-5\">\n        <div className=\"container pt-5 pb-4\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-md-12\">\n              <div className=\"form\">\n                <Form onSubmit={onSubmit} subscription={{ submitting: true, pristine: true }}>\n                  {({ handleSubmit, submitting, pristine }) => (\n                    <form onSubmit={handleSubmit}>\n                      <FormStateToRedux form=\"FORGOT_PASSOWORD_FORM\" />\n                      <h2 className=\"mb-4\">Forgot Password?</h2>\n                      {asyncError ? (\n                        <p className=\"text-danger\">\n                          <span>{asyncError}</span>\n                        </p>\n                      ) : null}\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Registered Email</label>\n                        <Field\n                          id=\"email\"\n                          type=\"email\"\n                          component=\"input\"\n                          className=\"form-control\"\n                          required\n                          validate={composeValidators(required, mustBeEmail)}\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,8}$\">\n                          {({ input, meta: { error, touched }, ...rest }) => (\n                            <>\n                              <input {...input} {...rest} />\n                              {error && touched && (\n                                <p className=\"text-danger\">{`${rest.placeholder} is ${error}`}</p>\n                              )}\n                            </>\n                          )}\n                        </Field>\n                      </div>\n\n                      <div className=\"form-group mb-0 mt-4\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-theme\"\n                          disabled={submitting || pristine}>\n                          Submit\n                        </button>\n                      </div>\n                      <div className=\"text-center mt-3\">\n                        <Link to={CONSTANTS.LOGIN_PAGE}>Back To Login</Link>\n                      </div>\n                    </form>\n                  )}\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"login_right\">\n          <img src=\"assets/img/sing_up.png\" alt=\"forgot password\" />\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}\n\nForgotPassword.propTypes = {\n  forgotPassword: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  forgotPassword: (values) => dispatch(forgotPasswordAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}