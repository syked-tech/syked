{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Routes from 'Routes';\nimport { selectIsAuthenticated // selectUser,\n, userHasAuthenticated as userHasAuthenticatedAction // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  userHasAuthenticated\n}) {\n  _s();\n\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      appProps: {\n        isAuthenticated,\n        userHasAuthenticated\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notifier, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  userHasAuthenticated: values => dispatch(userHasAuthenticatedAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/App.js"],"names":["React","PropTypes","compose","connect","useSelector","withRouter","Routes","selectIsAuthenticated","userHasAuthenticated","userHasAuthenticatedAction","Notifier","App","isAuthenticated","propTypes","func","mapDispatchToProps","dispatch","values","withConnect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACEC,qBADF,CAEE;AAFF,EAGEC,oBAAoB,IAAIC,0BAH1B,CAIE;AAJF,OAKO,2BALP;AAMA,OAAOC,QAAP,MAAqB,qBAArB;;;;AAEA,SAASC,GAAT,CAAa;AAAEH,EAAAA;AAAF,CAAb,EAAuC;AAAA;;AACrC,QAAMI,eAAe,GAAGR,WAAW,CAACG,qBAAD,CAAnC;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE;AAAEK,QAAAA,eAAF;AAAmBJ,QAAAA;AAAnB;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GARQG,G;UACiBP,W;;;KADjBO,G;AAUTA,GAAG,CAACE,SAAJ,GAAgB;AACdL,EAAAA,oBAAoB,EAAEP,SAAS,CAACa;AADlB,CAAhB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,oBAAoB,EAAGS,MAAD,IAAYD,QAAQ,CAACP,0BAA0B,CAACQ,MAAD,CAA3B;AADF,CAAf,CAA3B;;AAIA,MAAMC,WAAW,GAAGf,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAA3B;AAEA,eAAeb,OAAO,CAACgB,WAAD,CAAP,CAAqBP,GAArB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Routes from 'Routes';\n\nimport {\n  selectIsAuthenticated,\n  // selectUser,\n  userHasAuthenticated as userHasAuthenticatedAction,\n  // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\n\nfunction App({ userHasAuthenticated }) {\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  return (\n    <>\n      <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n      <Notifier />\n    </>\n  );\n}\n\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  userHasAuthenticated: (values) => dispatch(userHasAuthenticatedAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(App);\n"]},"metadata":{},"sourceType":"module"}