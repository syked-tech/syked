{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ResetPassword/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form, Field } from 'react-final-form'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer'; // import * as CONSTANTS from 'common/constants';\n\nimport FormStateToRedux from 'common/util/FormStateToRedux';\nimport { composeValidators, required } from 'common/util/Validation';\nimport { resetPassword as resetPasswordAction, isLoadingResetPassword, selectError } from 'containers/Auth/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword({\n  resetPassword\n}) {\n  _s();\n\n  const loading = useSelector(isLoadingResetPassword);\n  const asyncError = useSelector(selectError);\n\n  const onSubmit = values => {\n    resetPassword(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/img/loader.svg\",\n        alt: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container pt-5 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pt-4 align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: onSubmit,\n                subscription: {\n                  submitting: true,\n                  pristine: true\n                },\n                children: ({\n                  handleSubmit,\n                  submitting,\n                  pristine\n                }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(FormStateToRedux, {\n                    form: \"RESET_PASSOWORD_FORM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"login_left\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"mb-4\",\n                        children: \"Reset Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 27\n                      }, this), asyncError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: asyncError\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 52,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 51,\n                        columnNumber: 29\n                      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"password\",\n                          component: \"input\",\n                          className: \"form-control\",\n                          required: true,\n                          validate: composeValidators(required),\n                          placeholder: \"Password\",\n                          name: \"password\",\n                          children: ({\n                            input,\n                            meta: {\n                              error,\n                              touched\n                            },\n                            ...rest\n                          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                              ...rest\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 66,\n                              columnNumber: 35\n                            }, this), error && touched && /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-danger\",\n                              children: `${rest.placeholder} is ${error}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 68,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 56,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"password\",\n                          component: \"input\",\n                          className: \"form-control\",\n                          required: true,\n                          validate: composeValidators(required),\n                          placeholder: \"Confirm Password\",\n                          name: \"confirmPassword\",\n                          children: ({\n                            input,\n                            meta: {\n                              error,\n                              touched\n                            },\n                            ...rest\n                          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                              ...rest\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 85,\n                              columnNumber: 35\n                            }, this), error && touched && /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-danger\",\n                              children: `${rest.placeholder} is ${error}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 87,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group mb-0 mt-4\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"submit\",\n                          className: \"btn btn-theme\",\n                          disabled: submitting || pristine,\n                          children: \"Submit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/img/sing_up.png\",\n          alt: \"Reset password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResetPassword, \"HNNgmm4q/GNw+q5xb6EbpgZvST4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ResetPassword;\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  resetPassword: values => dispatch(resetPasswordAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ResetPassword/ResetPassword.js"],"names":["React","PropTypes","connect","useSelector","compose","Form","Field","Header","Footer","FormStateToRedux","composeValidators","required","resetPassword","resetPasswordAction","isLoadingResetPassword","selectError","ResetPassword","loading","asyncError","onSubmit","values","submitting","pristine","handleSubmit","input","meta","error","touched","rest","placeholder","propTypes","func","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form, Field } from 'react-final-form';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n// import * as CONSTANTS from 'common/constants';\nimport FormStateToRedux from 'common/util/FormStateToRedux';\nimport { composeValidators, required } from 'common/util/Validation';\n\nimport {\n  resetPassword as resetPasswordAction,\n  isLoadingResetPassword,\n  selectError,\n} from 'containers/Auth/authSlice';\n\nfunction ResetPassword({ resetPassword }) {\n  const loading = useSelector(isLoadingResetPassword);\n  const asyncError = useSelector(selectError);\n  const onSubmit = (values) => {\n    resetPassword(values);\n  };\n\n  return (\n    <>\n      <Header />\n\n      {loading ? (\n        <div className=\"loader\">\n          <img src=\"assets/img/loader.svg\" alt=\"loader\" />\n        </div>\n      ) : null}\n\n      <section className=\"login pt-5\">\n        <div className=\"container pt-5 pb-4\">\n          <div className=\"row pt-4 align-items-center\">\n            <div className=\"col-md-12\">\n              <div className=\"form\">\n                <Form onSubmit={onSubmit} subscription={{ submitting: true, pristine: true }}>\n                  {({ handleSubmit, submitting, pristine }) => (\n                    <form onSubmit={handleSubmit}>\n                      <FormStateToRedux form=\"RESET_PASSOWORD_FORM\" />\n                      <div className=\"login_left\">\n                        <div className=\"\">\n                          <h2 className=\"mb-4\">Reset Password</h2>\n                          {asyncError ? (\n                            <p className=\"text-danger\">\n                              <span>{asyncError}</span>\n                            </p>\n                          ) : null}\n                          <div className=\"form-group\">\n                            <Field\n                              type=\"password\"\n                              component=\"input\"\n                              className=\"form-control\"\n                              required\n                              validate={composeValidators(required)}\n                              placeholder=\"Password\"\n                              name=\"password\">\n                              {({ input, meta: { error, touched }, ...rest }) => (\n                                <>\n                                  <input {...input} {...rest} />\n                                  {error && touched && (\n                                    <p className=\"text-danger\">{`${rest.placeholder} is ${error}`}</p>\n                                  )}\n                                </>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"form-group\">\n                            <Field\n                              type=\"password\"\n                              component=\"input\"\n                              className=\"form-control\"\n                              required\n                              validate={composeValidators(required)}\n                              placeholder=\"Confirm Password\"\n                              name=\"confirmPassword\">\n                              {({ input, meta: { error, touched }, ...rest }) => (\n                                <>\n                                  <input {...input} {...rest} />\n                                  {error && touched && (\n                                    <p className=\"text-danger\">{`${rest.placeholder} is ${error}`}</p>\n                                  )}\n                                </>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"form-group mb-0 mt-4\">\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-theme\"\n                              disabled={submitting || pristine}>\n                              Submit\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  )}\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"login_right\">\n          <img src=\"assets/img/sing_up.png\" alt=\"Reset password\" />\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetPassword: (values) => dispatch(resetPasswordAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}