{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    userSession: {},\n    user: {},\n    error: null,\n    isLoadingSignIn: false,\n    isLoadingSignUp: false,\n    isAuthenticated: false,\n    isLoadingForgotPassword: false,\n    isLoadingResetPassword: false,\n    isLoadingConfirmPassword: false,\n    isLoadingChangePassword: false,\n    isLoadingCompleteNewPassword: false,\n    isLoadingvalidatingInvite: false,\n    isUpdatingUserAttributes: false,\n    isDeactivatingUser: false\n  },\n  reducers: {\n    signIn: state => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    signInSuccess: state => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    signInFailed: (state, action) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    },\n    socialLogin: state => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    socialLoginSuccess: state => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    socialLoginFailed: state => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false; // state.error = action.payload;\n    },\n    signOut: state => {\n      state.isLoadingsignOut = true;\n    },\n    signOutSuccess: state => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    signOutFailed: state => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    userHasAuthenticated: (state, action) => {\n      state.isAuthenticated = action.payload;\n    },\n    userSession: (state, action) => {\n      state.userSession = action.payload; // state.user = action.payload.idToken.payload;\n    },\n    resetError: state => {\n      state.error = null;\n    },\n    signUp: state => {\n      state.isLoadingSignUp = true;\n    },\n    signUpSuccess: state => {\n      state.isLoadingSignUp = false;\n    },\n    signUpFailed: state => {\n      state.isLoadingSignUp = false;\n    },\n    confirmSignUp: state => {\n      state.isLoadingConfirmSignUp = true;\n    },\n    confirmSignUpSuccess: state => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    confirmSignUpFailed: state => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    forgotPassword: state => {\n      state.isLoadingForgotPassword = true;\n      state.error = null;\n    },\n    forgotPasswordSuccess: state => {\n      state.isLoadingForgotPassword = false;\n      state.error = null;\n    },\n    forgotPasswordFailed: (state, action) => {\n      state.isLoadingForgotPassword = false;\n      state.error = action.payload;\n    },\n    resetPassword: state => {\n      state.isLoadingResetPassword = true;\n      state.error = null;\n    },\n    resetPasswordSuccess: state => {\n      state.isLoadingResetPassword = false;\n      state.error = null;\n    },\n    resetPasswordFailed: (state, action) => {\n      state.isLoadingResetPassword = false;\n      state.error = action.payload;\n    },\n    confirmPassword: state => {\n      state.isLoadingConfirmPassword = true;\n    },\n    confirmPasswordSuccess: state => {\n      state.isLoadingConfirmPassword = false;\n    },\n    confirmPasswordFailed: state => {\n      state.isLoadingConfirmPassword = false;\n    },\n    changePassword: state => {\n      state.isLoadingChangePassword = true;\n    },\n    changePasswordSuccess: state => {\n      state.isLoadingChangePassword = false;\n    },\n    changePasswordFailed: state => {\n      state.isLoadingChangePassword = false;\n    },\n    completeNewPassword: state => {\n      state.isLoadingCompleteNewPassword = true;\n    },\n    completeNewPasswordSuccess: state => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    completeNewPasswordFailed: state => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    validateInvite: state => {\n      state.isLoadingvalidatingInvite = true;\n    },\n    validateInviteSuccess: state => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    validateInviteFailed: state => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    updateUserAttributes: state => {\n      state.isUpdatingUserAttributes = true;\n    },\n    updateUserAttributesSuccess: state => {\n      state.isUpdatingUserAttributes = false;\n    },\n    updateUserAttributesFailed: state => {\n      state.isUpdatingUserAttributes = false;\n    },\n    deactivateUser: state => {\n      state.isDeactivatingUser = true;\n    },\n    deactivateUserSuccess: state => {\n      state.isDeactivatingUser = false;\n    },\n    deactivateUserFailed: state => {\n      state.isDeactivatingUser = false;\n    }\n  }\n});\nexport const {\n  signIn,\n  signInSuccess,\n  signInFailed,\n  socialLogin,\n  socialLoginSuccess,\n  socialLoginFailed,\n  signOut,\n  signOutSuccess,\n  signOutFailed,\n  userSession,\n  userHasAuthenticated,\n  resetError,\n  signUp,\n  signUpSuccess,\n  signUpFailed,\n  confirmSignUp,\n  confirmSignUpSuccess,\n  confirmSignUpFailed,\n  forgotPassword,\n  forgotPasswordSuccess,\n  forgotPasswordFailed,\n  resetPassword,\n  resetPasswordSuccess,\n  resetPasswordFailed,\n  changePassword,\n  changePasswordSuccess,\n  changePasswordFailed,\n  confirmPassword,\n  confirmPasswordSuccess,\n  confirmPasswordFailed,\n  completeNewPassword,\n  completeNewPasswordSuccess,\n  completeNewPasswordFailed,\n  validateInvite,\n  validateInviteSuccess,\n  validateInviteFailed,\n  updateUserAttributes,\n  updateUserAttributesSuccess,\n  updateUserAttributesFailed,\n  deactivateUser,\n  deactivateUserSuccess,\n  deactivateUserFailed\n} = authSlice.actions;\nexport const selectUserSession = state => state.auth.userSession;\nexport const selectUser = state => state.auth.user;\nexport const selectError = state => state.auth.error;\nexport const isLoadingSignIn = state => state.auth.isLoadingSignIn;\nexport const isLoadingSignUp = state => state.auth.isLoadingSignUp;\nexport const isLoadingConfirmSignUp = state => state.auth.isLoadingConfirmSignUp;\nexport const isLoadingForgotPassword = state => state.auth.isLoadingForgotPassword;\nexport const isLoadingResetPassword = state => state.auth.isLoadingResetPassword;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const isLoadingConfirmPassword = state => state.auth.isLoadingConfirmPassword;\nexport const isLoadingChangePassword = state => state.auth.isLoadingChangePassword;\nexport const isLoadingCompleteNewPassword = state => state.auth.isLoadingCompleteNewPassword;\nexport const isLoadingvalidatingInvite = state => state.auth.isLoadingvalidatingInvite;\nexport const isUpdatingUserAttributes = state => state.auth.isUpdatingUserAttributes;\nexport const isDeactivatingUser = state => state.auth.isDeactivatingUser;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/authSlice.js"],"names":["createSlice","authSlice","name","initialState","userSession","user","error","isLoadingSignIn","isLoadingSignUp","isAuthenticated","isLoadingForgotPassword","isLoadingResetPassword","isLoadingConfirmPassword","isLoadingChangePassword","isLoadingCompleteNewPassword","isLoadingvalidatingInvite","isUpdatingUserAttributes","isDeactivatingUser","reducers","signIn","state","signInSuccess","signInFailed","action","payload","socialLogin","socialLoginSuccess","socialLoginFailed","signOut","isLoadingsignOut","signOutSuccess","signOutFailed","userHasAuthenticated","resetError","signUp","signUpSuccess","signUpFailed","confirmSignUp","isLoadingConfirmSignUp","confirmSignUpSuccess","confirmSignUpFailed","forgotPassword","forgotPasswordSuccess","forgotPasswordFailed","resetPassword","resetPasswordSuccess","resetPasswordFailed","confirmPassword","confirmPasswordSuccess","confirmPasswordFailed","changePassword","changePasswordSuccess","changePasswordFailed","completeNewPassword","completeNewPasswordSuccess","completeNewPasswordFailed","validateInvite","validateInviteSuccess","validateInviteFailed","updateUserAttributes","updateUserAttributesSuccess","updateUserAttributesFailed","deactivateUser","deactivateUserSuccess","deactivateUserFailed","actions","selectUserSession","auth","selectUser","selectError","selectIsAuthenticated","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    userSession: {},\n    user: {},\n    error: null,\n    isLoadingSignIn: false,\n    isLoadingSignUp: false,\n    isAuthenticated: false,\n    isLoadingForgotPassword: false,\n    isLoadingResetPassword: false,\n    isLoadingConfirmPassword: false,\n    isLoadingChangePassword: false,\n    isLoadingCompleteNewPassword: false,\n    isLoadingvalidatingInvite: false,\n    isUpdatingUserAttributes: false,\n    isDeactivatingUser: false,\n  },\n  reducers: {\n    signIn: (state) => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    signInSuccess: (state) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    signInFailed: (state, action) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    },\n    socialLogin: (state) => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    socialLoginSuccess: (state) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    socialLoginFailed: (state) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false;\n      // state.error = action.payload;\n    },\n    signOut: (state) => {\n      state.isLoadingsignOut = true;\n    },\n    signOutSuccess: (state) => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    signOutFailed: (state) => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    userHasAuthenticated: (state, action) => {\n      state.isAuthenticated = action.payload;\n    },\n    userSession: (state, action) => {\n      state.userSession = action.payload;\n      // state.user = action.payload.idToken.payload;\n    },\n    resetError: (state) => {\n      state.error = null;\n    },\n    signUp: (state) => {\n      state.isLoadingSignUp = true;\n    },\n    signUpSuccess: (state) => {\n      state.isLoadingSignUp = false;\n    },\n    signUpFailed: (state) => {\n      state.isLoadingSignUp = false;\n    },\n    confirmSignUp: (state) => {\n      state.isLoadingConfirmSignUp = true;\n    },\n    confirmSignUpSuccess: (state) => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    confirmSignUpFailed: (state) => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    forgotPassword: (state) => {\n      state.isLoadingForgotPassword = true;\n      state.error = null;\n    },\n    forgotPasswordSuccess: (state) => {\n      state.isLoadingForgotPassword = false;\n      state.error = null;\n    },\n    forgotPasswordFailed: (state, action) => {\n      state.isLoadingForgotPassword = false;\n      state.error = action.payload;\n    },\n    resetPassword: (state) => {\n      state.isLoadingResetPassword = true;\n      state.error = null;\n    },\n    resetPasswordSuccess: (state) => {\n      state.isLoadingResetPassword = false;\n      state.error = null;\n    },\n    resetPasswordFailed: (state, action) => {\n      state.isLoadingResetPassword = false;\n      state.error = action.payload;\n    },\n    confirmPassword: (state) => {\n      state.isLoadingConfirmPassword = true;\n    },\n    confirmPasswordSuccess: (state) => {\n      state.isLoadingConfirmPassword = false;\n    },\n    confirmPasswordFailed: (state) => {\n      state.isLoadingConfirmPassword = false;\n    },\n    changePassword: (state) => {\n      state.isLoadingChangePassword = true;\n    },\n    changePasswordSuccess: (state) => {\n      state.isLoadingChangePassword = false;\n    },\n    changePasswordFailed: (state) => {\n      state.isLoadingChangePassword = false;\n    },\n    completeNewPassword: (state) => {\n      state.isLoadingCompleteNewPassword = true;\n    },\n    completeNewPasswordSuccess: (state) => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    completeNewPasswordFailed: (state) => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    validateInvite: (state) => {\n      state.isLoadingvalidatingInvite = true;\n    },\n    validateInviteSuccess: (state) => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    validateInviteFailed: (state) => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    updateUserAttributes: (state) => {\n      state.isUpdatingUserAttributes = true;\n    },\n    updateUserAttributesSuccess: (state) => {\n      state.isUpdatingUserAttributes = false;\n    },\n    updateUserAttributesFailed: (state) => {\n      state.isUpdatingUserAttributes = false;\n    },\n    deactivateUser: (state) => {\n      state.isDeactivatingUser = true;\n    },\n    deactivateUserSuccess: (state) => {\n      state.isDeactivatingUser = false;\n    },\n    deactivateUserFailed: (state) => {\n      state.isDeactivatingUser = false;\n    },\n  },\n});\n\nexport const {\n  signIn,\n  signInSuccess,\n  signInFailed,\n  socialLogin,\n  socialLoginSuccess,\n  socialLoginFailed,\n  signOut,\n  signOutSuccess,\n  signOutFailed,\n  userSession,\n  userHasAuthenticated,\n  resetError,\n  signUp,\n  signUpSuccess,\n  signUpFailed,\n  confirmSignUp,\n  confirmSignUpSuccess,\n  confirmSignUpFailed,\n  forgotPassword,\n  forgotPasswordSuccess,\n  forgotPasswordFailed,\n  resetPassword,\n  resetPasswordSuccess,\n  resetPasswordFailed,\n  changePassword,\n  changePasswordSuccess,\n  changePasswordFailed,\n  confirmPassword,\n  confirmPasswordSuccess,\n  confirmPasswordFailed,\n  completeNewPassword,\n  completeNewPasswordSuccess,\n  completeNewPasswordFailed,\n  validateInvite,\n  validateInviteSuccess,\n  validateInviteFailed,\n  updateUserAttributes,\n  updateUserAttributesSuccess,\n  updateUserAttributesFailed,\n  deactivateUser,\n  deactivateUserSuccess,\n  deactivateUserFailed,\n} = authSlice.actions;\n\nexport const selectUserSession = (state) => state.auth.userSession;\nexport const selectUser = (state) => state.auth.user;\nexport const selectError = (state) => state.auth.error;\nexport const isLoadingSignIn = (state) => state.auth.isLoadingSignIn;\nexport const isLoadingSignUp = (state) => state.auth.isLoadingSignUp;\nexport const isLoadingConfirmSignUp = (state) => state.auth.isLoadingConfirmSignUp;\nexport const isLoadingForgotPassword = (state) => state.auth.isLoadingForgotPassword;\nexport const isLoadingResetPassword = (state) => state.auth.isLoadingResetPassword;\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const isLoadingConfirmPassword = (state) => state.auth.isLoadingConfirmPassword;\nexport const isLoadingChangePassword = (state) => state.auth.isLoadingChangePassword;\nexport const isLoadingCompleteNewPassword = (state) => state.auth.isLoadingCompleteNewPassword;\nexport const isLoadingvalidatingInvite = (state) => state.auth.isLoadingvalidatingInvite;\nexport const isUpdatingUserAttributes = (state) => state.auth.isUpdatingUserAttributes;\nexport const isDeactivatingUser = (state) => state.auth.isDeactivatingUser;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}