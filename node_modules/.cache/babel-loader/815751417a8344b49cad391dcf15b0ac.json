{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nexport const therapistSlice = createSlice({\n  name: 'therapist',\n  initialState: {\n    therapists: [],\n    isLoadingTherapists: false,\n    preferredTherapists: [],\n    isLoadingPreferredTherapists: false,\n    therapist: {},\n    isLoadingTherapist: false,\n    reviews: [],\n    isLoadingReviews: false,\n    questions: [],\n    isLoadingQuestions: false,\n    schedule: [],\n    isLoadingSchedule: false\n  },\n  reducers: {\n    getTherapists: state => {\n      state.isLoadingTherapists = true;\n    },\n    getTherapistsSuccess: (state, action) => {\n      state.isLoadingTherapists = false;\n      state.therapists = action.payload;\n    },\n    getTherapistsInFailed: state => {\n      state.isLoadingTherapists = false;\n    },\n    getTherapistsByScore: state => {\n      state.isLoadingPreferredTherapists = true;\n    },\n    getTherapistsByScoreSuccess: (state, action) => {\n      state.isLoadingPreferredTherapists = false;\n      state.preferredTherapists = action.payload;\n    },\n    getTherapistsByScoreInFailed: state => {\n      state.isLoadingPreferredTherapists = false;\n    },\n    getTherapist: state => {\n      state.isLoadingTherapist = true;\n    },\n    getTherapistSuccess: (state, action) => {\n      state.isLoadingTherapist = false;\n      state.therapist = action.payload;\n    },\n    getTherapistInFailed: state => {\n      state.isLoadingTherapist = false;\n    },\n    getReviews: state => {\n      state.isLoadingReviews = true;\n    },\n    getReviewsSuccess: (state, action) => {\n      state.isLoadingReviews = false;\n      state.reviews = action.payload;\n    },\n    getReviewsInFailed: state => {\n      state.isLoadingReviews = false;\n    },\n    getQuestions: state => {\n      state.isLoadingQuestions = true;\n    },\n    getQuestionsSuccess: (state, action) => {\n      state.isLoadingQuestions = false;\n      state.questions = action.payload;\n    },\n    getQuestionsInFailed: state => {\n      state.isLoadingQuestions = false;\n    },\n    getSchedule: state => {\n      state.isLoadingSchedule = true;\n    },\n    getScheduleSuccess: (state, action) => {\n      state.isLoadingSchedule = false;\n      state.schedule = action.payload;\n    },\n    getScheduleInFailed: state => {\n      state.isLoadingSchedule = false;\n    }\n  }\n});\nexport const {\n  getTherapists,\n  getTherapistsSuccess,\n  getTherapistsInFailed,\n  getTherapistsByScore,\n  getTherapistsByScoreSuccess,\n  getTherapistsByScoreInFailed,\n  getTherapist,\n  getTherapistSuccess,\n  getTherapistInFailed,\n  getReviews,\n  getReviewsSuccess,\n  getReviewsInFailed,\n  getQuestions,\n  getQuestionsSuccess,\n  getQuestionsInFailed,\n  getSchedule,\n  getScheduleSuccess,\n  getScheduleInFailed\n} = therapistSlice.actions;\nexport const selectTherapists = state => state.therapist.therapists;\nexport const isLoadingTherapists = state => state.therapist.isLoadingTherapists;\nexport const selectPreferredTherapists = state => state.therapist.preferredTherapists;\nexport const isLoadingPreferredTherapists = state => state.therapist.isLoadingPreferredTherapists;\nexport const selectTherapist = state => state.therapist.therapist;\nexport const isLoadingTherapist = state => state.therapist.isLoadingTherapist;\nexport const selectReviews = state => state.therapist.reviews;\nexport const isLoadingReviews = state => state.therapist.isLoadingReviews;\nexport const selectQuestions = state => state.therapist.questions;\nexport const isLoadingQuestions = state => state.therapist.isLoadingQuestions;\nexport const selectSchedule = state => state.therapist.schedule;\nexport const isLoadingSchedule = state => state.therapist.isLoadingSchedule;\nexport default therapistSlice.reducer;","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Therapist/therapistSlice.js"],"names":["createSlice","therapistSlice","name","initialState","therapists","isLoadingTherapists","preferredTherapists","isLoadingPreferredTherapists","therapist","isLoadingTherapist","reviews","isLoadingReviews","questions","isLoadingQuestions","schedule","isLoadingSchedule","reducers","getTherapists","state","getTherapistsSuccess","action","payload","getTherapistsInFailed","getTherapistsByScore","getTherapistsByScoreSuccess","getTherapistsByScoreInFailed","getTherapist","getTherapistSuccess","getTherapistInFailed","getReviews","getReviewsSuccess","getReviewsInFailed","getQuestions","getQuestionsSuccess","getQuestionsInFailed","getSchedule","getScheduleSuccess","getScheduleInFailed","actions","selectTherapists","selectPreferredTherapists","selectTherapist","selectReviews","selectQuestions","selectSchedule","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const therapistSlice = createSlice({\n  name: 'therapist',\n  initialState: {\n    therapists: [],\n    isLoadingTherapists: false,\n    preferredTherapists: [],\n    isLoadingPreferredTherapists: false,\n    therapist: {},\n    isLoadingTherapist: false,\n    reviews: [],\n    isLoadingReviews: false,\n    questions: [],\n    isLoadingQuestions: false,\n    schedule: [],\n    isLoadingSchedule: false,\n  },\n  reducers: {\n    getTherapists: (state) => {\n      state.isLoadingTherapists = true;\n    },\n    getTherapistsSuccess: (state, action) => {\n      state.isLoadingTherapists = false;\n      state.therapists = action.payload;\n    },\n    getTherapistsInFailed: (state) => {\n      state.isLoadingTherapists = false;\n    },\n    getTherapistsByScore: (state) => {\n      state.isLoadingPreferredTherapists = true;\n    },\n    getTherapistsByScoreSuccess: (state, action) => {\n      state.isLoadingPreferredTherapists = false;\n      state.preferredTherapists = action.payload;\n    },\n    getTherapistsByScoreInFailed: (state) => {\n      state.isLoadingPreferredTherapists = false;\n    },\n    getTherapist: (state) => {\n      state.isLoadingTherapist = true;\n    },\n    getTherapistSuccess: (state, action) => {\n      state.isLoadingTherapist = false;\n      state.therapist = action.payload;\n    },\n    getTherapistInFailed: (state) => {\n      state.isLoadingTherapist = false;\n    },\n    getReviews: (state) => {\n      state.isLoadingReviews = true;\n    },\n    getReviewsSuccess: (state, action) => {\n      state.isLoadingReviews = false;\n      state.reviews = action.payload;\n    },\n    getReviewsInFailed: (state) => {\n      state.isLoadingReviews = false;\n    },\n    getQuestions: (state) => {\n      state.isLoadingQuestions = true;\n    },\n    getQuestionsSuccess: (state, action) => {\n      state.isLoadingQuestions = false;\n      state.questions = action.payload;\n    },\n    getQuestionsInFailed: (state) => {\n      state.isLoadingQuestions = false;\n    },\n    getSchedule: (state) => {\n      state.isLoadingSchedule = true;\n    },\n    getScheduleSuccess: (state, action) => {\n      state.isLoadingSchedule = false;\n      state.schedule = action.payload;\n    },\n    getScheduleInFailed: (state) => {\n      state.isLoadingSchedule = false;\n    },\n  },\n});\n\nexport const {\n  getTherapists,\n  getTherapistsSuccess,\n  getTherapistsInFailed,\n  getTherapistsByScore,\n  getTherapistsByScoreSuccess,\n  getTherapistsByScoreInFailed,\n  getTherapist,\n  getTherapistSuccess,\n  getTherapistInFailed,\n  getReviews,\n  getReviewsSuccess,\n  getReviewsInFailed,\n  getQuestions,\n  getQuestionsSuccess,\n  getQuestionsInFailed,\n  getSchedule,\n  getScheduleSuccess,\n  getScheduleInFailed,\n} = therapistSlice.actions;\n\nexport const selectTherapists = (state) => state.therapist.therapists;\nexport const isLoadingTherapists = (state) => state.therapist.isLoadingTherapists;\nexport const selectPreferredTherapists = (state) => state.therapist.preferredTherapists;\nexport const isLoadingPreferredTherapists = (state) => state.therapist.isLoadingPreferredTherapists;\nexport const selectTherapist = (state) => state.therapist.therapist;\nexport const isLoadingTherapist = (state) => state.therapist.isLoadingTherapist;\nexport const selectReviews = (state) => state.therapist.reviews;\nexport const isLoadingReviews = (state) => state.therapist.isLoadingReviews;\nexport const selectQuestions = (state) => state.therapist.questions;\nexport const isLoadingQuestions = (state) => state.therapist.isLoadingQuestions;\nexport const selectSchedule = (state) => state.therapist.schedule;\nexport const isLoadingSchedule = (state) => state.therapist.isLoadingSchedule;\n\nexport default therapistSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}