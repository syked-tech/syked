{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport history from 'common/history';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport notifications from 'components/Notifier/reducer';\nimport finalForm from 'common/util/finalFormDuck';\nimport authReducer from 'containers/Auth/authSlice';\nimport therapistReducer from 'containers/Therapist/therapistSlice'; // import customerReducer from 'containers/Customers/customerSlice';\n// import policiesReducer from 'containers/Policies/policiesSlice';\n// import usersReducer from 'containers/Users/usersSlice';\n\nimport authSaga from 'containers/Auth/saga';\nimport therapistSaga from 'containers/Therapist/saga'; // import customerSaga from 'containers/Customers/saga';\n// import policiesSaga from 'containers/Policies/saga';\n// import userSaga from 'containers/Users/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst router = routerMiddleware(history);\nconst rootReducer = combineReducers({\n  finalForm,\n  notifier: notifications,\n  auth: authReducer,\n  therapist: therapistReducer,\n  // customer: customerReducer,\n  // policy: policiesReducer,\n  // user: usersReducer,\n  router: connectRouter(history)\n});\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, apiMiddleware, router]\n});\nsagaMiddleware.run(authSaga);\nsagaMiddleware.run(therapistSaga); // sagaMiddleware.run(policiesSaga);\n// sagaMiddleware.run(userSaga);\n\nexport default store;","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/common/store.js"],"names":["configureStore","combineReducers","connectRouter","routerMiddleware","createSagaMiddleware","history","apiMiddleware","notifications","finalForm","authReducer","therapistReducer","authSaga","therapistSaga","sagaMiddleware","router","rootReducer","notifier","auth","therapist","store","reducer","middleware","run"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B,C,CACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,MAAMU,MAAM,GAAGX,gBAAgB,CAACE,OAAD,CAA/B;AAEA,MAAMU,WAAW,GAAGd,eAAe,CAAC;AAClCO,EAAAA,SADkC;AAElCQ,EAAAA,QAAQ,EAAET,aAFwB;AAGlCU,EAAAA,IAAI,EAAER,WAH4B;AAIlCS,EAAAA,SAAS,EAAER,gBAJuB;AAKlC;AACA;AACA;AACAI,EAAAA,MAAM,EAAEZ,aAAa,CAACG,OAAD;AARa,CAAD,CAAnC;AAWA,OAAO,MAAMc,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAEL,WADyB;AAElCM,EAAAA,UAAU,EAAE,CAACR,cAAD,EAAiBP,aAAjB,EAAgCQ,MAAhC;AAFsB,CAAD,CAA5B;AAKPD,cAAc,CAACS,GAAf,CAAmBX,QAAnB;AACAE,cAAc,CAACS,GAAf,CAAmBV,aAAnB,E,CACA;AACA;;AAEA,eAAeO,KAAf","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport history from 'common/history';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport notifications from 'components/Notifier/reducer';\nimport finalForm from 'common/util/finalFormDuck';\nimport authReducer from 'containers/Auth/authSlice';\nimport therapistReducer from 'containers/Therapist/therapistSlice';\n// import customerReducer from 'containers/Customers/customerSlice';\n// import policiesReducer from 'containers/Policies/policiesSlice';\n// import usersReducer from 'containers/Users/usersSlice';\nimport authSaga from 'containers/Auth/saga';\nimport therapistSaga from 'containers/Therapist/saga';\n// import customerSaga from 'containers/Customers/saga';\n// import policiesSaga from 'containers/Policies/saga';\n// import userSaga from 'containers/Users/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst router = routerMiddleware(history);\n\nconst rootReducer = combineReducers({\n  finalForm,\n  notifier: notifications,\n  auth: authReducer,\n  therapist: therapistReducer,\n  // customer: customerReducer,\n  // policy: policiesReducer,\n  // user: usersReducer,\n  router: connectRouter(history),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, apiMiddleware, router],\n});\n\nsagaMiddleware.run(authSaga);\nsagaMiddleware.run(therapistSaga);\n// sagaMiddleware.run(policiesSaga);\n// sagaMiddleware.run(userSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}