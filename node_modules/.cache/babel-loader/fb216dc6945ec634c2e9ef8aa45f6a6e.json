{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux'; // import { withRouter } from 'react-router-dom';\n\nimport Routes from 'Routes';\nimport { selectIsAuthenticated // selectUser,\n, userHasAuthenticated as userHasAuthenticatedAction // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  userHasAuthenticated\n}) {\n  _s();\n\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Notifier, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  userHasAuthenticated: values => dispatch(userHasAuthenticatedAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/App.js"],"names":["React","PropTypes","compose","connect","useSelector","Routes","selectIsAuthenticated","userHasAuthenticated","userHasAuthenticatedAction","Notifier","App","isAuthenticated","propTypes","func","mapDispatchToProps","dispatch","values","withConnect"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACEC,qBADF,CAEE;AAFF,EAGEC,oBAAoB,IAAIC,0BAH1B,CAIE;AAJF,OAKO,2BALP;AAMA,OAAOC,QAAP,MAAqB,qBAArB;;;;AAEA,SAASC,GAAT,CAAa;AAAEH,EAAAA;AAAF,CAAb,EAAuC;AAAA;;AACrC,QAAMI,eAAe,GAAGP,WAAW,CAACE,qBAAD,CAAnC;AACA,sBACE;AAAA,2BAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAMD;;GARQI,G;UACiBN,W;;;KADjBM,G;AAUTA,GAAG,CAACE,SAAJ,GAAgB;AACdL,EAAAA,oBAAoB,EAAEN,SAAS,CAACY;AADlB,CAAhB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,oBAAoB,EAAGS,MAAD,IAAYD,QAAQ,CAACP,0BAA0B,CAACQ,MAAD,CAA3B;AADF,CAAf,CAA3B;;AAIA,MAAMC,WAAW,GAAGd,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAA3B;AAEA,eAAeZ,OAAO,CAACe,WAAD,CAAP,CAAqBP,GAArB,CAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport Routes from 'Routes';\n\nimport {\n  selectIsAuthenticated,\n  // selectUser,\n  userHasAuthenticated as userHasAuthenticatedAction,\n  // userSession as userSessionAction,\n} from 'containers/Auth/authSlice';\nimport Notifier from 'components/Notifier';\n\nfunction App({ userHasAuthenticated }) {\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  return (\n    <>\n      {/* <Routes appProps={{ isAuthenticated, userHasAuthenticated }} /> */}\n      <Notifier />\n    </>\n  );\n}\n\nApp.propTypes = {\n  userHasAuthenticated: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  userHasAuthenticated: (values) => dispatch(userHasAuthenticatedAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(App);\n"]},"metadata":{},"sourceType":"module"}