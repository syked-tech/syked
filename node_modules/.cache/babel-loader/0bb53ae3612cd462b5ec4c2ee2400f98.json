{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    userSession: {},\n    user: {},\n    error: null,\n    isLoadingSignIn: false,\n    isLoadingSignUp: false,\n    isAuthenticated: false,\n    isLoadingResetPassword: false,\n    isLoadingConfirmPassword: false,\n    isLoadingChangePassword: false,\n    isLoadingCompleteNewPassword: false,\n    isLoadingvalidatingInvite: false,\n    isUpdatingUserAttributes: false,\n    isDeactivatingUser: false\n  },\n  reducers: {\n    signIn: state => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    signInSuccess: state => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    signInFailed: (state, action) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    },\n    signOut: state => {\n      state.isLoadingsignOut = true;\n    },\n    signOutSuccess: state => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    signOutFailed: state => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    userHasAuthenticated: (state, action) => {\n      state.isAuthenticated = action.payload;\n    },\n    userSession: (state, action) => {\n      state.userSession = action.payload; // state.user = action.payload.idToken.payload;\n    },\n    signUp: state => {\n      state.isLoadingSignUp = true;\n    },\n    signUpSuccess: state => {\n      state.isLoadingSignUp = false;\n    },\n    signUpFailed: state => {\n      state.isLoadingSignUp = false;\n    },\n    confirmSignUp: state => {\n      state.isLoadingConfirmSignUp = true;\n    },\n    confirmSignUpSuccess: state => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    confirmSignUpFailed: state => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    resetPassword: state => {\n      state.isLoadingResetPassword = true;\n    },\n    resetPasswordSuccess: state => {\n      state.isLoadingResetPassword = false;\n    },\n    resetPasswordFailed: state => {\n      state.isLoadingResetPassword = false;\n    },\n    confirmPassword: state => {\n      state.isLoadingConfirmPassword = true;\n    },\n    confirmPasswordSuccess: state => {\n      state.isLoadingConfirmPassword = false;\n    },\n    confirmPasswordFailed: state => {\n      state.isLoadingConfirmPassword = false;\n    },\n    changePassword: state => {\n      state.isLoadingChangePassword = true;\n    },\n    changePasswordSuccess: state => {\n      state.isLoadingChangePassword = false;\n    },\n    changePasswordFailed: state => {\n      state.isLoadingChangePassword = false;\n    },\n    completeNewPassword: state => {\n      state.isLoadingCompleteNewPassword = true;\n    },\n    completeNewPasswordSuccess: state => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    completeNewPasswordFailed: state => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    validateInvite: state => {\n      state.isLoadingvalidatingInvite = true;\n    },\n    validateInviteSuccess: state => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    validateInviteFailed: state => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    updateUserAttributes: state => {\n      state.isUpdatingUserAttributes = true;\n    },\n    updateUserAttributesSuccess: state => {\n      state.isUpdatingUserAttributes = false;\n    },\n    updateUserAttributesFailed: state => {\n      state.isUpdatingUserAttributes = false;\n    },\n    deactivateUser: state => {\n      state.isDeactivatingUser = true;\n    },\n    deactivateUserSuccess: state => {\n      state.isDeactivatingUser = false;\n    },\n    deactivateUserFailed: state => {\n      state.isDeactivatingUser = false;\n    }\n  }\n});\nexport const {\n  signIn,\n  signInSuccess,\n  signInFailed,\n  signOut,\n  signOutSuccess,\n  signOutFailed,\n  userSession,\n  userHasAuthenticated,\n  signUp,\n  signUpSuccess,\n  signUpFailed,\n  confirmSignUp,\n  confirmSignUpSuccess,\n  confirmSignUpFailed,\n  resetPassword,\n  resetPasswordSuccess,\n  resetPasswordFailed,\n  changePassword,\n  changePasswordSuccess,\n  changePasswordFailed,\n  confirmPassword,\n  confirmPasswordSuccess,\n  confirmPasswordFailed,\n  completeNewPassword,\n  completeNewPasswordSuccess,\n  completeNewPasswordFailed,\n  validateInvite,\n  validateInviteSuccess,\n  validateInviteFailed,\n  updateUserAttributes,\n  updateUserAttributesSuccess,\n  updateUserAttributesFailed,\n  deactivateUser,\n  deactivateUserSuccess,\n  deactivateUserFailed\n} = authSlice.actions;\nexport const selectUserSession = state => state.auth.userSession;\nexport const selectUser = state => state.auth.user;\nexport const selectError = state => state.auth.error;\nexport const isLoadingSignIn = state => state.auth.isLoadingSignIn;\nexport const isLoadingSignUp = state => state.auth.isLoadingSignUp;\nexport const isLoadingConfirmSignUp = state => state.auth.isLoadingConfirmSignUp;\nexport const isLoadingResetPassword = state => state.auth.isLoadingResetPassword;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const isLoadingConfirmPassword = state => state.auth.isLoadingConfirmPassword;\nexport const isLoadingChangePassword = state => state.auth.isLoadingChangePassword;\nexport const isLoadingCompleteNewPassword = state => state.auth.isLoadingCompleteNewPassword;\nexport const isLoadingvalidatingInvite = state => state.auth.isLoadingvalidatingInvite;\nexport const isUpdatingUserAttributes = state => state.auth.isUpdatingUserAttributes;\nexport const isDeactivatingUser = state => state.auth.isDeactivatingUser;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/authSlice.js"],"names":["createSlice","authSlice","name","initialState","userSession","user","error","isLoadingSignIn","isLoadingSignUp","isAuthenticated","isLoadingResetPassword","isLoadingConfirmPassword","isLoadingChangePassword","isLoadingCompleteNewPassword","isLoadingvalidatingInvite","isUpdatingUserAttributes","isDeactivatingUser","reducers","signIn","state","signInSuccess","signInFailed","action","payload","signOut","isLoadingsignOut","signOutSuccess","signOutFailed","userHasAuthenticated","signUp","signUpSuccess","signUpFailed","confirmSignUp","isLoadingConfirmSignUp","confirmSignUpSuccess","confirmSignUpFailed","resetPassword","resetPasswordSuccess","resetPasswordFailed","confirmPassword","confirmPasswordSuccess","confirmPasswordFailed","changePassword","changePasswordSuccess","changePasswordFailed","completeNewPassword","completeNewPasswordSuccess","completeNewPasswordFailed","validateInvite","validateInviteSuccess","validateInviteFailed","updateUserAttributes","updateUserAttributesSuccess","updateUserAttributesFailed","deactivateUser","deactivateUserSuccess","deactivateUserFailed","actions","selectUserSession","auth","selectUser","selectError","selectIsAuthenticated","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    userSession: {},\n    user: {},\n    error: null,\n    isLoadingSignIn: false,\n    isLoadingSignUp: false,\n    isAuthenticated: false,\n    isLoadingResetPassword: false,\n    isLoadingConfirmPassword: false,\n    isLoadingChangePassword: false,\n    isLoadingCompleteNewPassword: false,\n    isLoadingvalidatingInvite: false,\n    isUpdatingUserAttributes: false,\n    isDeactivatingUser: false,\n  },\n  reducers: {\n    signIn: (state) => {\n      state.isLoadingSignIn = true;\n      state.error = null;\n    },\n    signInSuccess: (state) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = true;\n      state.error = null;\n    },\n    signInFailed: (state, action) => {\n      state.isLoadingSignIn = false;\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    },\n    signOut: (state) => {\n      state.isLoadingsignOut = true;\n    },\n    signOutSuccess: (state) => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    signOutFailed: (state) => {\n      state.isLoadingsignOut = false;\n      state.isAuthenticated = false;\n    },\n    userHasAuthenticated: (state, action) => {\n      state.isAuthenticated = action.payload;\n    },\n    userSession: (state, action) => {\n      state.userSession = action.payload;\n      // state.user = action.payload.idToken.payload;\n    },\n    signUp: (state) => {\n      state.isLoadingSignUp = true;\n    },\n    signUpSuccess: (state) => {\n      state.isLoadingSignUp = false;\n    },\n    signUpFailed: (state) => {\n      state.isLoadingSignUp = false;\n    },\n    confirmSignUp: (state) => {\n      state.isLoadingConfirmSignUp = true;\n    },\n    confirmSignUpSuccess: (state) => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    confirmSignUpFailed: (state) => {\n      state.isLoadingConfirmSignUp = false;\n    },\n    resetPassword: (state) => {\n      state.isLoadingResetPassword = true;\n    },\n    resetPasswordSuccess: (state) => {\n      state.isLoadingResetPassword = false;\n    },\n    resetPasswordFailed: (state) => {\n      state.isLoadingResetPassword = false;\n    },\n    confirmPassword: (state) => {\n      state.isLoadingConfirmPassword = true;\n    },\n    confirmPasswordSuccess: (state) => {\n      state.isLoadingConfirmPassword = false;\n    },\n    confirmPasswordFailed: (state) => {\n      state.isLoadingConfirmPassword = false;\n    },\n    changePassword: (state) => {\n      state.isLoadingChangePassword = true;\n    },\n    changePasswordSuccess: (state) => {\n      state.isLoadingChangePassword = false;\n    },\n    changePasswordFailed: (state) => {\n      state.isLoadingChangePassword = false;\n    },\n    completeNewPassword: (state) => {\n      state.isLoadingCompleteNewPassword = true;\n    },\n    completeNewPasswordSuccess: (state) => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    completeNewPasswordFailed: (state) => {\n      state.isLoadingCompleteNewPassword = false;\n    },\n    validateInvite: (state) => {\n      state.isLoadingvalidatingInvite = true;\n    },\n    validateInviteSuccess: (state) => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    validateInviteFailed: (state) => {\n      state.isLoadingvalidatingInvite = false;\n    },\n    updateUserAttributes: (state) => {\n      state.isUpdatingUserAttributes = true;\n    },\n    updateUserAttributesSuccess: (state) => {\n      state.isUpdatingUserAttributes = false;\n    },\n    updateUserAttributesFailed: (state) => {\n      state.isUpdatingUserAttributes = false;\n    },\n    deactivateUser: (state) => {\n      state.isDeactivatingUser = true;\n    },\n    deactivateUserSuccess: (state) => {\n      state.isDeactivatingUser = false;\n    },\n    deactivateUserFailed: (state) => {\n      state.isDeactivatingUser = false;\n    },\n  },\n});\n\nexport const {\n  signIn,\n  signInSuccess,\n  signInFailed,\n  signOut,\n  signOutSuccess,\n  signOutFailed,\n  userSession,\n  userHasAuthenticated,\n  signUp,\n  signUpSuccess,\n  signUpFailed,\n  confirmSignUp,\n  confirmSignUpSuccess,\n  confirmSignUpFailed,\n  resetPassword,\n  resetPasswordSuccess,\n  resetPasswordFailed,\n  changePassword,\n  changePasswordSuccess,\n  changePasswordFailed,\n  confirmPassword,\n  confirmPasswordSuccess,\n  confirmPasswordFailed,\n  completeNewPassword,\n  completeNewPasswordSuccess,\n  completeNewPasswordFailed,\n  validateInvite,\n  validateInviteSuccess,\n  validateInviteFailed,\n  updateUserAttributes,\n  updateUserAttributesSuccess,\n  updateUserAttributesFailed,\n  deactivateUser,\n  deactivateUserSuccess,\n  deactivateUserFailed,\n} = authSlice.actions;\n\nexport const selectUserSession = (state) => state.auth.userSession;\nexport const selectUser = (state) => state.auth.user;\nexport const selectError = (state) => state.auth.error;\nexport const isLoadingSignIn = (state) => state.auth.isLoadingSignIn;\nexport const isLoadingSignUp = (state) => state.auth.isLoadingSignUp;\nexport const isLoadingConfirmSignUp = (state) => state.auth.isLoadingConfirmSignUp;\nexport const isLoadingResetPassword = (state) => state.auth.isLoadingResetPassword;\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const isLoadingConfirmPassword = (state) => state.auth.isLoadingConfirmPassword;\nexport const isLoadingChangePassword = (state) => state.auth.isLoadingChangePassword;\nexport const isLoadingCompleteNewPassword = (state) => state.auth.isLoadingCompleteNewPassword;\nexport const isLoadingvalidatingInvite = (state) => state.auth.isLoadingvalidatingInvite;\nexport const isUpdatingUserAttributes = (state) => state.auth.isUpdatingUserAttributes;\nexport const isDeactivatingUser = (state) => state.auth.isDeactivatingUser;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}