{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ResetPassword/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form, Field } from 'react-final-form'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer'; // import * as CONSTANTS from 'common/constants';\n\nimport FormStateToRedux from 'common/util/FormStateToRedux'; // import { composeValidators, required } from 'common/util/Validation';\n\nimport { useParams } from 'react-router-dom';\nimport { resetPassword as resetPasswordAction, resetError as resetErrorAction, isLoadingResetPassword, selectError } from 'containers/Auth/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword({\n  resetPassword,\n  resetError\n}) {\n  _s();\n\n  const params = useParams();\n  const loading = useSelector(isLoadingResetPassword);\n  const asyncError = useSelector(selectError);\n  useEffect(() => {\n    resetError();\n  }, [resetError]);\n\n  const onSubmit = values => {\n    resetPassword({ ...values,\n      ...params\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"assets/img/loader.svg\",\n        alt: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container pt-5 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pt-4 align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: onSubmit,\n                subscription: {\n                  submitting: true,\n                  pristine: true\n                },\n                validate: values => {\n                  var _values$password;\n\n                  const errors = {};\n\n                  if (!values.password) {\n                    errors.password = 'Password is required';\n                  }\n\n                  if ((values === null || values === void 0 ? void 0 : (_values$password = values.password) === null || _values$password === void 0 ? void 0 : _values$password.length) < 6) {\n                    errors.password = 'The Password length must be at least 6 characters.';\n                  }\n\n                  if (!values.confirmPassword) {\n                    errors.confirmPassword = 'Confirm password is required';\n                  } else if (values.confirmPassword !== values.password) {\n                    errors.confirmPassword = 'Confirm password does not match.';\n                  }\n\n                  return errors;\n                },\n                children: ({\n                  handleSubmit,\n                  submitting,\n                  pristine\n                }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(FormStateToRedux, {\n                    form: \"RESET_PASSOWORD_FORM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"login_left\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"mb-4\",\n                        children: \"Reset Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 27\n                      }, this), asyncError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: asyncError\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 29\n                      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"password\",\n                          component: \"input\",\n                          className: \"form-control\",\n                          required: true,\n                          placeholder: \"Password\",\n                          name: \"password\",\n                          children: ({\n                            input,\n                            meta: {\n                              error,\n                              touched\n                            },\n                            ...rest\n                          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                              ...rest\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 89,\n                              columnNumber: 35\n                            }, this), error && touched && /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-danger\",\n                              children: error\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 90,\n                              columnNumber: 56\n                            }, this)]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 80,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"password\",\n                          component: \"input\",\n                          className: \"form-control\",\n                          required: true,\n                          placeholder: \"Confirm Password\",\n                          name: \"confirmPassword\",\n                          children: ({\n                            input,\n                            meta: {\n                              error,\n                              touched\n                            },\n                            ...rest\n                          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                              ...rest\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 105,\n                              columnNumber: 35\n                            }, this), error && touched && /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-danger\",\n                              children: error\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 106,\n                              columnNumber: 56\n                            }, this)]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group mb-0 mt-4\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"submit\",\n                          className: \"btn btn-theme\",\n                          disabled: submitting || pristine,\n                          children: \"Submit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/img/sing_up.png\",\n          alt: \"Reset password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResetPassword, \"1TAFMxHP9bzKxIp02a3bmss/kIs=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n\n_c = ResetPassword;\nResetPassword.propTypes = {\n  resetError: PropTypes.func,\n  resetPassword: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  resetError: values => dispatch(resetErrorAction(values)),\n  resetPassword: values => dispatch(resetPasswordAction(values))\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/containers/Auth/ResetPassword/ResetPassword.js"],"names":["React","useEffect","PropTypes","connect","useSelector","compose","Form","Field","Header","Footer","FormStateToRedux","useParams","resetPassword","resetPasswordAction","resetError","resetErrorAction","isLoadingResetPassword","selectError","ResetPassword","params","loading","asyncError","onSubmit","values","submitting","pristine","errors","password","length","confirmPassword","handleSubmit","input","meta","error","touched","rest","propTypes","func","mapDispatchToProps","dispatch","withConnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,8BAA7B,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACEC,aAAa,IAAIC,mBADnB,EAEEC,UAAU,IAAIC,gBAFhB,EAGEC,sBAHF,EAIEC,WAJF,QAKO,2BALP;;;;AAOA,SAASC,aAAT,CAAuB;AAAEN,EAAAA,aAAF;AAAiBE,EAAAA;AAAjB,CAAvB,EAAsD;AAAA;;AACpD,QAAMK,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,OAAO,GAAGhB,WAAW,CAACY,sBAAD,CAA3B;AACA,QAAMK,UAAU,GAAGjB,WAAW,CAACa,WAAD,CAA9B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMQ,QAAQ,GAAIC,MAAD,IAAY;AAC3BX,IAAAA,aAAa,CAAC,EAAE,GAAGW,MAAL;AAAa,SAAGJ;AAAhB,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGC,OAAO,gBACN;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,uBAAT;AAAiC,QAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,GAIJ,IAPN,eASE;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,QAAQ,EAAEE,QADZ;AAEE,gBAAA,YAAY,EAAE;AAAEE,kBAAAA,UAAU,EAAE,IAAd;AAAoBC,kBAAAA,QAAQ,EAAE;AAA9B,iBAFhB;AAGE,gBAAA,QAAQ,EAAGF,MAAD,IAAY;AAAA;;AACpB,wBAAMG,MAAM,GAAG,EAAf;;AACA,sBAAI,CAACH,MAAM,CAACI,QAAZ,EAAsB;AACpBD,oBAAAA,MAAM,CAACC,QAAP,GAAkB,sBAAlB;AACD;;AACD,sBAAI,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAEI,QAAR,sEAAkBC,MAAlB,IAA2B,CAA/B,EAAkC;AAChCF,oBAAAA,MAAM,CAACC,QAAP,GAAkB,oDAAlB;AACD;;AACD,sBAAI,CAACJ,MAAM,CAACM,eAAZ,EAA6B;AAC3BH,oBAAAA,MAAM,CAACG,eAAP,GAAyB,8BAAzB;AACD,mBAFD,MAEO,IAAIN,MAAM,CAACM,eAAP,KAA2BN,MAAM,CAACI,QAAtC,EAAgD;AACrDD,oBAAAA,MAAM,CAACG,eAAP,GAAyB,kCAAzB;AACD;;AACD,yBAAOH,MAAP;AACD,iBAjBH;AAAA,0BAkBG,CAAC;AAAEI,kBAAAA,YAAF;AAAgBN,kBAAAA,UAAhB;AAA4BC,kBAAAA;AAA5B,iBAAD,kBACC;AAAM,kBAAA,QAAQ,EAAEK,YAAhB;AAAA,0CACE,QAAC,gBAAD;AAAkB,oBAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,EAAf;AAAA,8CACE;AAAI,wBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEGT,UAAU,gBACT;AAAG,wBAAA,SAAS,EAAC,aAAb;AAAA,+CACE;AAAA,oCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BADS,GAIP,IANN,eAOE;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,+CACE,QAAC,KAAD;AACE,0BAAA,IAAI,EAAC,UADP;AAEE,0BAAA,SAAS,EAAC,OAFZ;AAGE,0BAAA,SAAS,EAAC,cAHZ;AAIE,0BAAA,QAAQ,MAJV;AAKE,0BAAA,WAAW,EAAC,UALd;AAME,0BAAA,IAAI,EAAC,UANP;AAAA,oCAOG,CAAC;AAAEU,4BAAAA,KAAF;AAASC,4BAAAA,IAAI,EAAE;AAAEC,8BAAAA,KAAF;AAASC,8BAAAA;AAAT,6BAAf;AAAmC,+BAAGC;AAAtC,2BAAD,kBACC;AAAA,oDACE,sBAAWJ,KAAX;AAAA,iCAAsBI;AAAtB;AAAA;AAAA;AAAA;AAAA,oCADF,EAEGF,KAAK,IAAIC,OAAT,iBAAoB;AAAG,8BAAA,SAAS,EAAC,aAAb;AAAA,wCAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,oCAFvB;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAPF,eAuBE;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,+CACE,QAAC,KAAD;AACE,0BAAA,IAAI,EAAC,UADP;AAEE,0BAAA,SAAS,EAAC,OAFZ;AAGE,0BAAA,SAAS,EAAC,cAHZ;AAIE,0BAAA,QAAQ,MAJV;AAKE,0BAAA,WAAW,EAAC,kBALd;AAME,0BAAA,IAAI,EAAC,iBANP;AAAA,oCAOG,CAAC;AAAEF,4BAAAA,KAAF;AAASC,4BAAAA,IAAI,EAAE;AAAEC,8BAAAA,KAAF;AAASC,8BAAAA;AAAT,6BAAf;AAAmC,+BAAGC;AAAtC,2BAAD,kBACC;AAAA,oDACE,sBAAWJ,KAAX;AAAA,iCAAsBI;AAAtB;AAAA;AAAA;AAAA;AAAA,oCADF,EAEGF,KAAK,IAAIC,OAAT,iBAAoB;AAAG,8BAAA,SAAS,EAAC,aAAb;AAAA,wCAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,oCAFvB;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAvBF,eAuCE;AAAK,wBAAA,SAAS,EAAC,sBAAf;AAAA,+CACE;AACE,0BAAA,IAAI,EAAC,QADP;AAEE,0BAAA,SAAS,EAAC,eAFZ;AAGE,0BAAA,QAAQ,EAAET,UAAU,IAAIC,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAmFE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,wBAAT;AAAkC,UAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAgGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhGF;AAAA,kBADF;AAoGD;;GAjHQP,a;UACQP,S,EACCP,W,EACGA,W;;;KAHZc,a;AAmHTA,aAAa,CAACkB,SAAd,GAA0B;AACxBtB,EAAAA,UAAU,EAAEZ,SAAS,CAACmC,IADE;AAExBzB,EAAAA,aAAa,EAAEV,SAAS,CAACmC;AAFD,CAA1B;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,UAAU,EAAGS,MAAD,IAAYgB,QAAQ,CAACxB,gBAAgB,CAACQ,MAAD,CAAjB,CADQ;AAExCX,EAAAA,aAAa,EAAGW,MAAD,IAAYgB,QAAQ,CAAC1B,mBAAmB,CAACU,MAAD,CAApB;AAFK,CAAf,CAA3B;;AAKA,MAAMiB,WAAW,GAAGrC,OAAO,CAAC,IAAD,EAAOmC,kBAAP,CAA3B;AAEA,eAAejC,OAAO,CAACmC,WAAD,CAAP,CAAqBtB,aAArB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form, Field } from 'react-final-form';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFacebookF } from '@fortawesome/free-brands-svg-icons';\n// import { Modal } from 'react-bootstrap';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n// import * as CONSTANTS from 'common/constants';\nimport FormStateToRedux from 'common/util/FormStateToRedux';\n// import { composeValidators, required } from 'common/util/Validation';\nimport { useParams } from 'react-router-dom';\nimport {\n  resetPassword as resetPasswordAction,\n  resetError as resetErrorAction,\n  isLoadingResetPassword,\n  selectError,\n} from 'containers/Auth/authSlice';\n\nfunction ResetPassword({ resetPassword, resetError }) {\n  const params = useParams();\n  const loading = useSelector(isLoadingResetPassword);\n  const asyncError = useSelector(selectError);\n\n  useEffect(() => {\n    resetError();\n  }, [resetError]);\n\n  const onSubmit = (values) => {\n    resetPassword({ ...values, ...params });\n  };\n\n  return (\n    <>\n      <Header />\n\n      {loading ? (\n        <div className=\"loader\">\n          <img src=\"assets/img/loader.svg\" alt=\"loader\" />\n        </div>\n      ) : null}\n\n      <section className=\"login pt-5\">\n        <div className=\"container pt-5 pb-4\">\n          <div className=\"row pt-4 align-items-center\">\n            <div className=\"col-md-12\">\n              <div className=\"form\">\n                <Form\n                  onSubmit={onSubmit}\n                  subscription={{ submitting: true, pristine: true }}\n                  validate={(values) => {\n                    const errors = {};\n                    if (!values.password) {\n                      errors.password = 'Password is required';\n                    }\n                    if (values?.password?.length < 6) {\n                      errors.password = 'The Password length must be at least 6 characters.';\n                    }\n                    if (!values.confirmPassword) {\n                      errors.confirmPassword = 'Confirm password is required';\n                    } else if (values.confirmPassword !== values.password) {\n                      errors.confirmPassword = 'Confirm password does not match.';\n                    }\n                    return errors;\n                  }}>\n                  {({ handleSubmit, submitting, pristine }) => (\n                    <form onSubmit={handleSubmit}>\n                      <FormStateToRedux form=\"RESET_PASSOWORD_FORM\" />\n                      <div className=\"login_left\">\n                        <div className=\"\">\n                          <h2 className=\"mb-4\">Reset Password</h2>\n                          {asyncError ? (\n                            <p className=\"text-danger\">\n                              <span>{asyncError}</span>\n                            </p>\n                          ) : null}\n                          <div className=\"form-group\">\n                            <Field\n                              type=\"password\"\n                              component=\"input\"\n                              className=\"form-control\"\n                              required\n                              placeholder=\"Password\"\n                              name=\"password\">\n                              {({ input, meta: { error, touched }, ...rest }) => (\n                                <>\n                                  <input {...input} {...rest} />\n                                  {error && touched && <p className=\"text-danger\">{error}</p>}\n                                </>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"form-group\">\n                            <Field\n                              type=\"password\"\n                              component=\"input\"\n                              className=\"form-control\"\n                              required\n                              placeholder=\"Confirm Password\"\n                              name=\"confirmPassword\">\n                              {({ input, meta: { error, touched }, ...rest }) => (\n                                <>\n                                  <input {...input} {...rest} />\n                                  {error && touched && <p className=\"text-danger\">{error}</p>}\n                                </>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"form-group mb-0 mt-4\">\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-theme\"\n                              disabled={submitting || pristine}>\n                              Submit\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  )}\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"login_right\">\n          <img src=\"assets/img/sing_up.png\" alt=\"Reset password\" />\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nResetPassword.propTypes = {\n  resetError: PropTypes.func,\n  resetPassword: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetError: (values) => dispatch(resetErrorAction(values)),\n  resetPassword: (values) => dispatch(resetPasswordAction(values)),\n});\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}