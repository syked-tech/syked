{"ast":null,"code":"var _jsxFileName = \"/Users/lasimonne/Projects/syked.xyz/src/components/AuthenticatedRoute/AuthenticatedRoute.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticatedRoute({\n  component: C,\n  appProps,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (appProps.isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(C, { ...props,\n          ...appProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/login?redirect=${props.location.pathname}${props.location.search}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = AuthenticatedRoute;\nAuthenticatedRoute.propTypes = {\n  appProps: PropTypes.any,\n  component: PropTypes.any,\n  location: PropTypes.any\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["/Users/lasimonne/Projects/syked.xyz/src/components/AuthenticatedRoute/AuthenticatedRoute.js"],"names":["React","PropTypes","Route","Redirect","AuthenticatedRoute","component","C","appProps","rest","props","isAuthenticated","location","pathname","search","propTypes","any"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,SAAS,EAAEC,CAAb;AAAgBC,EAAAA,QAAhB;AAA0B,KAAGC;AAA7B,CAA5B,EAAiE;AAC9E,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIF,QAAQ,CAACG,eAAb,EAA8B;AAC5B,4BAAO,QAAC,CAAD,OAAOD,KAAP;AAAA,aAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,mBAAkBE,KAAK,CAACE,QAAN,CAAeC,QAAS,GAAEH,KAAK,CAACE,QAAN,CAAeE,MAAO;AAAjF;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAduBT,kB;AAgBxBA,kBAAkB,CAACU,SAAnB,GAA+B;AAC7BP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,GADS;AAE7BV,EAAAA,SAAS,EAAEJ,SAAS,CAACc,GAFQ;AAG7BJ,EAAAA,QAAQ,EAAEV,SAAS,CAACc;AAHS,CAA/B","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function AuthenticatedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (appProps.isAuthenticated) {\n          return <C {...props} {...appProps} />;\n        }\n        return (\n          <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`} />\n        );\n      }}\n    />\n  );\n}\n\nAuthenticatedRoute.propTypes = {\n  appProps: PropTypes.any,\n  component: PropTypes.any,\n  location: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}